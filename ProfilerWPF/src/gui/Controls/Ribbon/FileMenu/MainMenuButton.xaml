<!--This componenent renders a button within the ribbon drawer-->
<UserControl x:Class="ProfilerWPF.gui.Controls.Ribbon.FileMenu.MainMenuButton"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:prism="http://prismlibrary.com/"
             mc:Ignorable="d" 
             >

	<Button Command="{Binding Command}" CommandParameter="{Binding CommandParameter}" Padding="{Binding Path=ButtonPadding, RelativeSource={RelativeSource AncestorType=UserControl}}" Margin="0,1,0,1" Style="{DynamicResource RibbonButtonStyle}">
        <Button.ContextMenu>
            <ContextMenu ItemsSource="{Binding ContextMenuItems}" >
                <ContextMenu.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Text}"/>
                    </DataTemplate>
                </ContextMenu.ItemTemplate>
            </ContextMenu>
        </Button.ContextMenu>

		<!-- When MouseEnter event is triggered it will fire the Navigate Command -->
		<i:Interaction.Triggers>
			<i:EventTrigger EventName="MouseEnter">
				<prism:InvokeCommandAction Command="{Binding PeekCommand}" CommandParameter="{Binding CommandParameter}" />
			</i:EventTrigger>
			<i:EventTrigger EventName="MouseLeave">
				<prism:InvokeCommandAction Command="{Binding ResetCommand}" />
			</i:EventTrigger>
		</i:Interaction.Triggers>

		<Grid>
			<Grid.RowDefinitions>
				<RowDefinition Height="50" MinHeight="24"/>
			</Grid.RowDefinitions>
			
			<Grid.ColumnDefinitions>
				<!-- Icon Column -->
				<ColumnDefinition Width="50" MinWidth="0"></ColumnDefinition>
				<!-- Text Column -->
				<ColumnDefinition Width="100" MinWidth="0" ></ColumnDefinition>
			</Grid.ColumnDefinitions>
			
			<!-- Icon -->
			<Border Margin="0,0,0,0" Padding="{Binding Path=IconPadding, RelativeSource={RelativeSource AncestorType=UserControl}}" VerticalAlignment="Center" Background="Transparent" >
				<ContentControl HorizontalAlignment="Center" VerticalAlignment="Center" VerticalContentAlignment="Center" Style="{Binding Path=IconStyle, RelativeSource={RelativeSource AncestorType=UserControl}}" BorderBrush="Black" Width="{Binding Path=IconWidth, RelativeSource={RelativeSource AncestorType=UserControl}}" Height="{Binding Path=IconHeight, RelativeSource={RelativeSource AncestorType=UserControl}}" />
            </Border>

			<!-- Text -->
			<TextBlock Background="Transparent" Padding="1,0,0,0" Grid.Row="0" Grid.Column="1" TextAlignment="Left" TextWrapping="WrapWithOverflow" VerticalAlignment="Center" HorizontalAlignment="Left" Foreground="Black"  FontSize="12">
				<Run Text="{Binding Path=Text}"/>
			</TextBlock>

		</Grid>
    </Button>
</UserControl>
